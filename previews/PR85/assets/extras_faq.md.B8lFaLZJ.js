import{_ as l,c as t,a5 as a,j as i,a as e,o as n}from"./chunks/framework.CGrcyYnv.js";const E=JSON.parse('{"title":"Frequently asked questions","description":"","frontmatter":{},"headers":[],"relativePath":"extras/faq.md","filePath":"extras/faq.md","lastUpdated":null}'),h={name:"extras/faq.md"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.166ex",height:"2.451ex",role:"img",focusable:"false",viewBox:"0 -833.2 2283.6 1083.2","aria-hidden":"true"};function o(u,s,k,d,c,g){return n(),t("div",null,[s[4]||(s[4]=a(`<h1 id="Frequently-asked-questions" tabindex="-1">Frequently asked questions <a class="header-anchor" href="#Frequently-asked-questions" aria-label="Permalink to &quot;Frequently asked questions {#Frequently-asked-questions}&quot;">​</a></h1><p>Here are a few common questions and possible answers.</p><h2 id="Input-and-output" tabindex="-1">Input and output <a class="header-anchor" href="#Input-and-output" aria-label="Permalink to &quot;Input and output {#Input-and-output}&quot;">​</a></h2><h3 id="What-input-formats-can-JutulDarcy.jl-use?" tabindex="-1">What input formats can JutulDarcy.jl use? <a class="header-anchor" href="#What-input-formats-can-JutulDarcy.jl-use?" aria-label="Permalink to &quot;What input formats can JutulDarcy.jl use? {#What-input-formats-can-JutulDarcy.jl-use?}&quot;">​</a></h3><ol><li><p>DATA files (used by Eclipse, OPM Flow, tNavigator, Echelon and others) provided that the grid is given either as a corner-point GRDECL file or in TOPS format. As with most reservoir simulators, not all features of the original format are supported, but the code will let you know when unsupported features are encountered.</p></li><li><p>Cases written out from <a href="https://www.mrst.no/" target="_blank" rel="noreferrer">MRST</a> through the <code>jutul</code> module.</p></li><li><p>Cases written entirely in Julia using the basic <code>Jutul</code> and <code>JutulDarcy</code> data structures, as seen in the examples of the module.</p></li></ol><h3 id="What-output-formats-does-JutulDarcy.jl-have?" tabindex="-1">What output formats does JutulDarcy.jl have? <a class="header-anchor" href="#What-output-formats-does-JutulDarcy.jl-have?" aria-label="Permalink to &quot;What output formats does JutulDarcy.jl have? {#What-output-formats-does-JutulDarcy.jl-have?}&quot;">​</a></h3><p>The simulator outputs results into standard Julia data structures (e.g. Vectors and Dicts) that can easily be written out using other Julia packages, for example in CSV format. We do not currently support binary formats output by commercial simulators.</p><p>Simulation results are written to disk using <a href="https://github.com/JuliaIO/JLD2.jl" target="_blank" rel="noreferrer">JLD2</a>, a subset of <a href="https://en.wikipedia.org/wiki/Hierarchical_Data_Format" target="_blank" rel="noreferrer">HDF5</a> commonly used in Julia for storing objects to disk.</p><h3 id="How-do-I-restart-an-interrupted-simulation?" tabindex="-1">How do I restart an interrupted simulation? <a class="header-anchor" href="#How-do-I-restart-an-interrupted-simulation?" aria-label="Permalink to &quot;How do I restart an interrupted simulation? {#How-do-I-restart-an-interrupted-simulation?}&quot;">​</a></h3><p>JutulDarcy keeps everything in memory by default. This is not practical for larger models. If the argument <code>output_path</code> is set to a directory, JutulDarcy writes to the <code>JLD2</code> format (variant of HDF5).</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Note: set ENV[&quot;JUTUL_OUTPUT_PATH&quot;] in your startup.jl first!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My_test_case&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth)</span></span></code></pre></div><p>If a output path is set, you can restart simulations:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart from the last succesfully solved step, or return output if everything is simulated</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ws, states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth, restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start from the beginning, overwriting files if already present</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ws, states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth, restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart from step 10 and throw error if step 9 is not already stored on disk.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ws, states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth, restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>You can restart the simulation with different options for timestepping or tolerances.</p><h3 id="How-do-I-decide-where-output-is-stored?" tabindex="-1">How do I decide where output is stored? <a class="header-anchor" href="#How-do-I-decide-where-output-is-stored?" aria-label="Permalink to &quot;How do I decide where output is stored? {#How-do-I-decide-where-output-is-stored?}&quot;">​</a></h3><p><code>Jutul.jl</code> contains a system for managing output folders. It is highly recommended that you amend your <code>startup.jl</code> file to include <code>ENV[&quot;JUTUL_OUTPUT_PATH&quot;]</code> that points to where you want output to be stored. For example, on Windows usage of the output path mechanism may look something like this:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JUTUL_OUTPUT_PATH&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Randomly generated file name</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/jutul/jl_DwpAvQTiLo&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/jutul/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ensemble_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/ensemble_name/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/mycase&quot;</span></span></code></pre></div><p>Or equivialent on a Linux system:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JUTUL_OUTPUT_PATH&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Randomly generated file name</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/jutul/jl_DwpAvQTiLo&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/jutul/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ensemble_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/ensemble_name/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/mycase&quot;</span></span></code></pre></div><p>You can also just specify a full path and keep track of output folders yourself, but using the <code>jutul_output_path</code> mechanism will make it easier to write a script that can be run on another computer with different folder structure.</p><h3 id="How-do-you-get-out-more-output-from-a-simulation?" tabindex="-1">How do you get out more output from a simulation? <a class="header-anchor" href="#How-do-you-get-out-more-output-from-a-simulation?" aria-label="Permalink to &quot;How do you get out more output from a simulation? {#How-do-you-get-out-more-output-from-a-simulation?}&quot;">​</a></h3><p>The default outputs per cell are primary variables and total masses:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reservoir_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_variables</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Symbol}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Pressure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Saturations</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :TotalMasses</span></span></code></pre></div><p>You can push variables to this list, or ask the code to output all variables:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model2, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> setup_reservoir_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domain, sys, extra_outputs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reservoir_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model2)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_variables</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Symbol}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Pressure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Saturations</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :TotalMasses</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :PhaseMassDensities</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :RelativePermeabilities</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :PhaseMobilities</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :PhaseMassMobilities</span></span></code></pre></div><p>You can also pass <code>extra_outputs = [:PhaseMobilities]</code> as a keyword argument to <code>setup_reservoir_model</code> to make the resulting model output specific variables.</p><h3 id="What-is-the-unit-and-sign-convention-for-well-rates?" tabindex="-1">What is the unit and sign convention for well rates? <a class="header-anchor" href="#What-is-the-unit-and-sign-convention-for-well-rates?" aria-label="Permalink to &quot;What is the unit and sign convention for well rates? {#What-is-the-unit-and-sign-convention-for-well-rates?}&quot;">​</a></h3>`,27)),i("p",null,[s[2]||(s[2]=e("Well results are given in strict SI, which means that rates are generally given in ")),i("mjx-container",r,[(n(),t("svg",p,s[0]||(s[0]=[a('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(911,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1314.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(1814.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("msup",null,[i("mi",null,"m"),i("mn",null,"3")]),i("mrow",{"data-mjx-texclass":"ORD"},[i("mo",null,"/")]),i("mi",null,"s")])],-1))]),s[3]||(s[3]=e(". Rates are positive for injection (mass entering the reservoir domain) and negative for production (leaving the reservoir domain)."))]),s[5]||(s[5]=a(`<h2 id="plotting" tabindex="-1">Plotting <a class="header-anchor" href="#plotting" aria-label="Permalink to &quot;Plotting&quot;">​</a></h2><h3 id="What-is-required-for-visualization?" tabindex="-1">What is required for visualization? <a class="header-anchor" href="#What-is-required-for-visualization?" aria-label="Permalink to &quot;What is required for visualization? {#What-is-required-for-visualization?}&quot;">​</a></h3><p>We use the wonderful <a href="https://docs.makie.org/" target="_blank" rel="noreferrer"><code>Makie.jl</code></a> for both 2D and 3D plots. Generally <code>CairoMakie</code> is supported for non-interactive plotting and <code>GLMakie</code> is used for interactive plotting (especially 3D). The latter requires a working graphics context, which is not directly available when the code is run over for example SSH or on a server.</p><p>For more details on the backends, see the<a href="https://docs.makie.org/stable/explanations/backends/backends" target="_blank" rel="noreferrer"><code>Makie.jl</code> docs</a></p><h2 id="miscellaneous" tabindex="-1">Miscellaneous <a class="header-anchor" href="#miscellaneous" aria-label="Permalink to &quot;Miscellaneous&quot;">​</a></h2><h3 id="Can-you-add-feature-X-or-format-Y?" tabindex="-1">Can you add feature X or format Y? <a class="header-anchor" href="#Can-you-add-feature-X-or-format-Y?" aria-label="Permalink to &quot;Can you add feature X or format Y? {#Can-you-add-feature-X-or-format-Y?}&quot;">​</a></h3><p>If you have a feature you&#39;d like to have supported, please file an <a href="https://github.com/JuliaIO/JLD2.jl/issues" target="_blank" rel="noreferrer">issue</a> with details on the format. <code>JutulDarcy</code> is developed primarily through contract research, so features are added as needed for ongoing projects where the simulator is in use. Posting an issue, especially if you have a clear reference to how something should be implemented is still very useful. It is also possible to fund the development for a specific feature, or to implement the feature yourself by asking for pointers on how to get started.</p><h3 id="What-units-does-JutulDarcy.jl-use?" tabindex="-1">What units does JutulDarcy.jl use? <a class="header-anchor" href="#What-units-does-JutulDarcy.jl-use?" aria-label="Permalink to &quot;What units does JutulDarcy.jl use? {#What-units-does-JutulDarcy.jl-use?}&quot;">​</a></h3><p>JutulDarcy uses consistent units. This typically means that all your values must be input in strict SI. This means pressures in Pascal, temperatures in Kelvin and time in seconds. Note that this is very similar to the <code>METRIC</code> type of unit system seen in many commercial simulators, except that units of time is not given in days. This also impacts permeabilities, transmissibilities and viscosities, which will be much smaller than in metric where days are used.</p><p>Reading of input files will automatically convert data to the correct units for simulation, but care must be taken when you are writing your own code. <code>Jutul.jl</code> contains unit conversion factors to make it easier to write code:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jutul</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_to_si</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.2e7</span></span></code></pre></div><p>You can also extract individual units and to the setup yourself:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jutul</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day, stb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> si_units</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:day</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:stb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># convert to m^3/s:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>0.00018401307283333335</span></span></code></pre></div><p>JutulDarcy does currently not make use of conversion factors or explicit units can in principle use any consistent unit system. Some default scaling of variables assume that the magnitude pressures and velocities roughly match that of strict SI (e.g. Pascals and cubic meters per second). These scaling factors are primarily used when iterative linear solvers are used.</p><h3 id="Why-write-a-new-reservoir-simulation-code-in-Julia?" tabindex="-1">Why write a new reservoir simulation code in Julia? <a class="header-anchor" href="#Why-write-a-new-reservoir-simulation-code-in-Julia?" aria-label="Permalink to &quot;Why write a new reservoir simulation code in Julia? {#Why-write-a-new-reservoir-simulation-code-in-Julia?}&quot;">​</a></h3><p>We believe that reservoir simulation should be a <em>library</em> and not necessarily an application by itself. The future of porous media simulation is deeply integrated into other workflows, and not as an application that simply writes files to disk. As a part of experimentation in differentiable and flexible solvers using automatic differentiation that started with <a href="https://www.mrst.no" target="_blank" rel="noreferrer">MRST</a>, Julia was the natural next step.</p><h3 id="What-is-the-license-of-JutulDarcy.jl?" tabindex="-1">What is the license of JutulDarcy.jl? <a class="header-anchor" href="#What-is-the-license-of-JutulDarcy.jl?" aria-label="Permalink to &quot;What is the license of JutulDarcy.jl? {#What-is-the-license-of-JutulDarcy.jl?}&quot;">​</a></h3><p>The code uses the <a href="https://en.wikipedia.org/wiki/MIT_License" target="_blank" rel="noreferrer">MIT license</a>, a permissive license that requires attribution, but does not place limitations on commercial use or closed-source integration.</p><p>The code uses a number of dependencies that can have other licenses and we make no guarantees that the entirety of the code made available by adding <code>JutulDarcy.jl</code> to a given Julia environment is all MIT licensed.</p>`,21))])}const m=l(h,[["render",o]]);export{E as __pageData,m as default};
