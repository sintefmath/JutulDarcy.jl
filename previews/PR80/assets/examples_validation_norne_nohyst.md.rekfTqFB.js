import{_ as a,c as i,a5 as n,o as e}from"./chunks/framework.DV8_rcIL.js";const l="/JutulDarcy.jl/previews/PR80/assets/rpmsmzw.CNfnwXcz.jpeg",t="/JutulDarcy.jl/previews/PR80/assets/popmadv.DEWIUwLh.jpeg",g=JSON.parse('{"title":"Norne: Real field black-oil model","description":"","frontmatter":{},"headers":[],"relativePath":"examples/validation_norne_nohyst.md","filePath":"examples/validation_norne_nohyst.md","lastUpdated":null}'),p={name:"examples/validation_norne_nohyst.md"};function h(r,s,o,k,d,c){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="Norne:-Real-field-black-oil-model" tabindex="-1">Norne: Real field black-oil model <a class="header-anchor" href="#Norne:-Real-field-black-oil-model" aria-label="Permalink to &quot;Norne: Real field black-oil model {#Norne:-Real-field-black-oil-model}&quot;">​</a></h1><p>The Norne model is a real field model. The model has been adapted so that the input file only contains features present in JutulDarcy, with the most notable omissions being removal of hysteresis and threshold pressures between equilibriation reqgions. For more details, see the <a href="https://opm-project.org/?page_id=559" target="_blank" rel="noreferrer">OPM data webpage</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jutul, JutulDarcy, GLMakie, DelimitedFiles, HYPRE, GeoEnergyIO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">norne_dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoEnergyIO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test_input_file_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NORNE_NOHYST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_pth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(norne_dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NORNE_NOHYST.DATA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parse_data_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data_pth)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">case </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> setup_case_from_data_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\x1B[33;1mF-4H completion:\x1B[0m Removed COMPDAT as (36, 68, 17) is not active in processed mesh.</span></span>
<span class="line"><span>\x1B[94;1mRel. Perm. Scaling:\x1B[0m Three-point scaling active.</span></span>
<span class="line"><span>\x1B[94;1mShutting D-1H:\x1B[0m Well has no open perforations at step 137, shutting.</span></span>
<span class="line"><span>┌ Warning: Negative saturation in 215 cells for phase 2. Normalizing.</span></span>
<span class="line"><span>└ @ JutulDarcy ~/work/JutulDarcy.jl/JutulDarcy.jl/src/init/init.jl:811</span></span>
<span class="line"><span>\x1B[94;1mTransmissibility:\x1B[0m Replaced 2 non-finite half-transmissibilities (out of 267694, 0.0%) with zero.</span></span>
<span class="line"><span>\x1B[94;1mTransmissibility:\x1B[0m Replaced 2 non-finite half-transmissibilities (out of 267694, 0.0%) with zero.</span></span></code></pre></div><h2 id="Unpack-the-case-to-see-basic-data-structures" tabindex="-1">Unpack the case to see basic data structures <a class="header-anchor" href="#Unpack-the-case-to-see-basic-data-structures" aria-label="Permalink to &quot;Unpack the case to see basic data structures {#Unpack-the-case-to-see-basic-data-structures}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parameters</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">forces </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">forces</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dt;</span></span></code></pre></div><h2 id="Plot-the-reservoir-mesh,-wells-and-faults" tabindex="-1">Plot the reservoir mesh, wells and faults <a class="header-anchor" href="#Plot-the-reservoir-mesh,-wells-and-faults" aria-label="Permalink to &quot;Plot the reservoir mesh, wells and faults {#Plot-the-reservoir-mesh,-wells-and-faults}&quot;">​</a></h2><p>We compose a few different plotting calls together to make a plot that shows the outline of the mesh, the fault structures and the well trajectories.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jutul</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot_mesh_edges!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reservoir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> reservoir_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> physical_representation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reservoir)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wells </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_model_wells</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], zreversed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot_mesh_edges!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, mesh, alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (k, w) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wells</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    plot_well!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, mesh, w)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot_faults!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, mesh, alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">azimuth[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elevation[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+l+`" alt=""></p><h2 id="Plot-the-reservoir-static-properties-in-interactive-viewer" tabindex="-1">Plot the reservoir static properties in interactive viewer <a class="header-anchor" href="#Plot-the-reservoir-static-properties-in-interactive-viewer" aria-label="Permalink to &quot;Plot the reservoir static properties in interactive viewer {#Plot-the-reservoir-static-properties-in-interactive-viewer}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :porosity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">current_axis[]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot_faults!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, mesh, alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">azimuth[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elevation[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+t+`" alt=""></p><h2 id="Simulate-the-model" tabindex="-1">Simulate the model <a class="header-anchor" href="#Simulate-the-model" aria-label="Permalink to &quot;Simulate the model {#Simulate-the-model}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ws, states = simulate_reservoir(case, output_substates = true)</span></span></code></pre></div><h2 id="Plot-the-reservoir-solution" tabindex="-1">Plot the reservoir solution <a class="header-anchor" href="#Plot-the-reservoir-solution" aria-label="Permalink to &quot;Plot the reservoir solution {#Plot-the-reservoir-solution}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fig = plot_reservoir(model, states, step = 247, key = :Saturations)</span></span>
<span class="line"><span>ax = fig.current_axis[]</span></span>
<span class="line"><span>ax.azimuth[] = -3.0</span></span>
<span class="line"><span>ax.elevation[] = 0.5</span></span>
<span class="line"><span>fig</span></span></code></pre></div><h2 id="Load-reference-and-set-up-plotting" tabindex="-1">Load reference and set up plotting <a class="header-anchor" href="#Load-reference-and-set-up-plotting" aria-label="Permalink to &quot;Load reference and set up plotting {#Load-reference-and-set-up-plotting}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>csv_path = joinpath(norne_dir, &quot;REFERENCE.CSV&quot;)</span></span>
<span class="line"><span>data, header = readdlm(csv_path, &#39;,&#39;, header = true)</span></span>
<span class="line"><span>time_ref = data[:, 1]</span></span>
<span class="line"><span>time_jutul = deepcopy(ws.time)</span></span>
<span class="line"><span>wells = deepcopy(ws.wells)</span></span>
<span class="line"><span>wnames = collect(keys(wells))</span></span>
<span class="line"><span>nw = length(wnames)</span></span>
<span class="line"><span>day = si_unit(:day)</span></span>
<span class="line"><span>cmap = :tableau_hue_circle</span></span>
<span class="line"><span></span></span>
<span class="line"><span>inj = Symbol[]</span></span>
<span class="line"><span>prod = Symbol[]</span></span>
<span class="line"><span>for (wellname, well) in pairs(wells)</span></span>
<span class="line"><span>    qts = well[:wrat] + well[:orat] + well[:grat]</span></span>
<span class="line"><span>    if sum(qts) &gt; 0</span></span>
<span class="line"><span>        push!(inj, wellname)</span></span>
<span class="line"><span>    else</span></span>
<span class="line"><span>        push!(prod, wellname)</span></span>
<span class="line"><span>    end</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function plot_well_comparison(response, well_names, reponse_name = &quot;$response&quot;)</span></span>
<span class="line"><span>    fig = Figure(size = (1000, 400))</span></span>
<span class="line"><span>    if response == :bhp</span></span>
<span class="line"><span>        ys = 1/si_unit(:bar)</span></span>
<span class="line"><span>        yl = &quot;Bottom hole pressure / Bar&quot;</span></span>
<span class="line"><span>    elseif response == :wrat</span></span>
<span class="line"><span>        ys = si_unit(:day)</span></span>
<span class="line"><span>        yl = &quot;Surface water rate / m³/day&quot;</span></span>
<span class="line"><span>    elseif response == :grat</span></span>
<span class="line"><span>        ys = si_unit(:day)/1e6</span></span>
<span class="line"><span>        yl = &quot;Surface gas rate / 10⁶ m³/day&quot;</span></span>
<span class="line"><span>    elseif response == :orat</span></span>
<span class="line"><span>        ys = si_unit(:day)/(1000*si_unit(:stb))</span></span>
<span class="line"><span>        yl = &quot;Surface oil rate / 10³ stb/day&quot;</span></span>
<span class="line"><span>    else</span></span>
<span class="line"><span>        error(&quot;$response not ready.&quot;)</span></span>
<span class="line"><span>    end</span></span>
<span class="line"><span>    welltypes = []</span></span>
<span class="line"><span>    ax = Axis(fig[1:4, 1], xlabel = &quot;Time / days&quot;, ylabel = yl)</span></span>
<span class="line"><span>    i = 1</span></span>
<span class="line"><span>    linehandles = []</span></span>
<span class="line"><span>    linelabels = []</span></span>
<span class="line"><span>    for well_name in well_names</span></span>
<span class="line"><span>        well = wells[well_name]</span></span>
<span class="line"><span>        label_in_csv = &quot;$well_name:$response&quot;</span></span>
<span class="line"><span>        ref_pos = findfirst(x -&gt; x == label_in_csv, vec(header))</span></span>
<span class="line"><span>        qoi = copy(well[response]).*ys</span></span>
<span class="line"><span>        qoi_ref = data[:, ref_pos].*ys</span></span>
<span class="line"><span>        tot_rate = copy(well[:rate])</span></span>
<span class="line"><span>        @. qoi[tot_rate == 0] = NaN</span></span>
<span class="line"><span>        grat_ref = data[:, findfirst(x -&gt; x == &quot;$well_name:grat&quot;, vec(header))]</span></span>
<span class="line"><span>        orat_ref = data[:, findfirst(x -&gt; x == &quot;$well_name:orat&quot;, vec(header))]</span></span>
<span class="line"><span>        wrat_ref = data[:, findfirst(x -&gt; x == &quot;$well_name:wrat&quot;, vec(header))]</span></span>
<span class="line"><span>        tot_rate_ref = grat_ref + orat_ref + wrat_ref</span></span>
<span class="line"><span>        @. qoi_ref[tot_rate_ref == 0] = NaN</span></span>
<span class="line"><span>        crange = (1, max(length(well_names), 2))</span></span>
<span class="line"><span>        lh = lines!(ax, time_jutul./day, abs.(qoi),</span></span>
<span class="line"><span>            color = i,</span></span>
<span class="line"><span>            colorrange = crange,</span></span>
<span class="line"><span>            label = &quot;$well_name&quot;, colormap = cmap</span></span>
<span class="line"><span>        )</span></span>
<span class="line"><span>        push!(linehandles, lh)</span></span>
<span class="line"><span>        push!(linelabels, &quot;$well_name&quot;)</span></span>
<span class="line"><span>        lines!(ax, time_ref./day, abs.(qoi_ref),</span></span>
<span class="line"><span>            color = i,</span></span>
<span class="line"><span>            colorrange = crange,</span></span>
<span class="line"><span>            linestyle = :dash,</span></span>
<span class="line"><span>            colormap = cmap</span></span>
<span class="line"><span>        )</span></span>
<span class="line"><span>        i += 1</span></span>
<span class="line"><span>    end</span></span>
<span class="line"><span>    l1 = LineElement(color = :black, linestyle = nothing)</span></span>
<span class="line"><span>    l2 = LineElement(color = :black, linestyle = :dash)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Legend(fig[1:3, 2], linehandles, linelabels, nbanks = 3)</span></span>
<span class="line"><span>    Legend(fig[4, 2], [l1, l2], [&quot;JutulDarcy.jl&quot;, &quot;OPM Flow&quot;])</span></span>
<span class="line"><span>    fig</span></span>
<span class="line"><span>end</span></span></code></pre></div><h2 id="Injector-bhp" tabindex="-1">Injector bhp <a class="header-anchor" href="#Injector-bhp" aria-label="Permalink to &quot;Injector bhp {#Injector-bhp}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_comparison(:bhp, inj, &quot;Bottom hole pressure&quot;)</span></span></code></pre></div><h2 id="Gas-injection-rates" tabindex="-1">Gas injection rates <a class="header-anchor" href="#Gas-injection-rates" aria-label="Permalink to &quot;Gas injection rates {#Gas-injection-rates}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_comparison(:grat, inj, &quot;Gas surface injection rate&quot;)</span></span></code></pre></div><h2 id="Water-injection-rates" tabindex="-1">Water injection rates <a class="header-anchor" href="#Water-injection-rates" aria-label="Permalink to &quot;Water injection rates {#Water-injection-rates}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_comparison(:wrat, inj, &quot;Water surface injection rate&quot;)</span></span></code></pre></div><h2 id="Producer-bhp" tabindex="-1">Producer bhp <a class="header-anchor" href="#Producer-bhp" aria-label="Permalink to &quot;Producer bhp {#Producer-bhp}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_comparison(:bhp, prod, &quot;Bottom hole pressure&quot;)</span></span></code></pre></div><h2 id="Oil-production-rates" tabindex="-1">Oil production rates <a class="header-anchor" href="#Oil-production-rates" aria-label="Permalink to &quot;Oil production rates {#Oil-production-rates}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_comparison(:orat, prod, &quot;Oil surface production rate&quot;)</span></span></code></pre></div><h2 id="Gas-production-rates" tabindex="-1">Gas production rates <a class="header-anchor" href="#Gas-production-rates" aria-label="Permalink to &quot;Gas production rates {#Gas-production-rates}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_comparison(:grat, prod, &quot;Gas surface production rate&quot;)</span></span></code></pre></div><h2 id="Interactive-plotting-of-field-statistics" tabindex="-1">Interactive plotting of field statistics <a class="header-anchor" href="#Interactive-plotting-of-field-statistics" aria-label="Permalink to &quot;Interactive plotting of field statistics {#Interactive-plotting-of-field-statistics}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_reservoir_measurables(case, ws, states, left = :fgpr, right = :pres)</span></span></code></pre></div><h2 id="Plot-wells" tabindex="-1">Plot wells <a class="header-anchor" href="#Plot-wells" aria-label="Permalink to &quot;Plot wells {#Plot-wells}&quot;">​</a></h2><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot_well_results(ws)</span></span></code></pre></div><h2 id="Example-on-GitHub" tabindex="-1">Example on GitHub <a class="header-anchor" href="#Example-on-GitHub" aria-label="Permalink to &quot;Example on GitHub {#Example-on-GitHub}&quot;">​</a></h2><p>If you would like to run this example yourself, it can be downloaded from the JutulDarcy.jl GitHub repository <a href="https://github.com/sintefmath/JutulDarcy.jl/blob/main/examples/validation_norne_nohyst.jl" target="_blank" rel="noreferrer">as a script</a>, or as a <a href="https://github.com/sintefmath/JutulDarcy.jl/blob/gh-pages/dev/final_site/notebooks/validation_norne_nohyst.ipynb" target="_blank" rel="noreferrer">Jupyter Notebook</a></p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>`,39)]))}const E=a(p,[["render",h]]);export{g as __pageData,E as default};
