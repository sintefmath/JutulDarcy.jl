import{_ as l,C as o,c as r,o as d,j as i,a as e,az as n,G as t}from"./chunks/framework.BEOxRSoE.js";const v=JSON.parse('{"title":"Driving forces","description":"","frontmatter":{},"headers":[],"relativePath":"man/basics/forces.md","filePath":"man/basics/forces.md","lastUpdated":null}'),p={name:"man/basics/forces.md"},c={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""};function g(E,s,m,b,f,_){const a=o("Badge");return d(),r("div",null,[s[16]||(s[16]=i("h1",{id:"Driving-forces",tabindex:"-1"},[e("Driving forces "),i("a",{class:"header-anchor",href:"#Driving-forces","aria-label":'Permalink to "Driving forces {#Driving-forces}"'},"​")],-1)),i("details",c,[i("summary",null,[s[0]||(s[0]=i("a",{id:"JutulDarcy.setup_reservoir_forces",href:"#JutulDarcy.setup_reservoir_forces"},[i("span",{class:"jlbinding"},"JutulDarcy.setup_reservoir_forces")],-1)),s[1]||(s[1]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[2]||(s[2]=n("",3))]),s[17]||(s[17]=i("h2",{id:"Source-terms",tabindex:"-1"},[e("Source terms "),i("a",{class:"header-anchor",href:"#Source-terms","aria-label":'Permalink to "Source terms {#Source-terms}"'},"​")],-1)),i("details",h,[i("summary",null,[s[3]||(s[3]=i("a",{id:"JutulDarcy.SourceTerm",href:"#JutulDarcy.SourceTerm"},[i("span",{class:"jlbinding"},"JutulDarcy.SourceTerm")],-1)),s[4]||(s[4]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=n("",5))]),i("details",u,[i("summary",null,[s[6]||(s[6]=i("a",{id:"JutulDarcy.FlowSourceType",href:"#JutulDarcy.FlowSourceType"},[i("span",{class:"jlbinding"},"JutulDarcy.FlowSourceType")],-1)),s[7]||(s[7]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=i("p",null,"MassSource: Source is directly interpreted as component masses. StandardVolumeSource: Source is volume at standard/surface conditions. References densities are used to convert into mass sources. VolumeSource: Source is volume at in-situ / reservoir conditions.",-1)),s[9]||(s[9]=i("p",null,[i("a",{href:"https://github.com/sintefmath/JutulDarcy.jl/blob/124b8542d2613fd229dcc13771d86384b7beb2ed/src/types.jl#L340-L344",target:"_blank",rel:"noreferrer"},"source")],-1))]),s[18]||(s[18]=i("h2",{id:"Boundary-conditions",tabindex:"-1"},[e("Boundary conditions "),i("a",{class:"header-anchor",href:"#Boundary-conditions","aria-label":'Permalink to "Boundary conditions {#Boundary-conditions}"'},"​")],-1)),i("details",k,[i("summary",null,[s[10]||(s[10]=i("a",{id:"JutulDarcy.FlowBoundaryCondition",href:"#JutulDarcy.FlowBoundaryCondition"},[i("span",{class:"jlbinding"},"JutulDarcy.FlowBoundaryCondition")],-1)),s[11]||(s[11]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[12]||(s[12]=n("",3))]),i("details",y,[i("summary",null,[s[13]||(s[13]=i("a",{id:"JutulDarcy.flow_boundary_condition",href:"#JutulDarcy.flow_boundary_condition"},[i("span",{class:"jlbinding"},"JutulDarcy.flow_boundary_condition")],-1)),s[14]||(s[14]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=n("",4))])])}const C=l(p,[["render",g]]);export{v as __pageData,C as default};
