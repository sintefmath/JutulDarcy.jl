import{_ as i,c as a,a5 as t,o as e}from"./chunks/framework.BnJvuozR.js";const d=JSON.parse('{"title":"Frequently asked questions","description":"","frontmatter":{},"headers":[],"relativePath":"extras/faq.md","filePath":"extras/faq.md","lastUpdated":null}'),n={name:"extras/faq.md"};function l(h,s,p,r,o,u){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="Frequently-asked-questions" tabindex="-1">Frequently asked questions <a class="header-anchor" href="#Frequently-asked-questions" aria-label="Permalink to &quot;Frequently asked questions {#Frequently-asked-questions}&quot;">​</a></h1><p>Here are a few common questions and possible answers.</p><h2 id="Input-and-output" tabindex="-1">Input and output <a class="header-anchor" href="#Input-and-output" aria-label="Permalink to &quot;Input and output {#Input-and-output}&quot;">​</a></h2><h3 id="What-input-formats-can-JutulDarcy.jl-use?" tabindex="-1">What input formats can JutulDarcy.jl use? <a class="header-anchor" href="#What-input-formats-can-JutulDarcy.jl-use?" aria-label="Permalink to &quot;What input formats can JutulDarcy.jl use? {#What-input-formats-can-JutulDarcy.jl-use?}&quot;">​</a></h3><ol><li><p>DATA files (used by Eclipse, OPM Flow, tNavigator, Echelon and others) provided that the grid is given either as a corner-point GRDECL file or in TOPS format. As with most reservoir simulators, not all features of the original format are supported, but the code will let you know when unsupported features are encountered.</p></li><li><p>Cases written out from <a href="https://www.mrst.no/" target="_blank" rel="noreferrer">MRST</a> through the <code>jutul</code> module.</p></li><li><p>Cases written entirely in Julia using the basic <code>Jutul</code> and <code>JutulDarcy</code> data structures, as seen in the examples of the module.</p></li></ol><h3 id="What-output-formats-does-JutulDarcy.jl-have?" tabindex="-1">What output formats does JutulDarcy.jl have? <a class="header-anchor" href="#What-output-formats-does-JutulDarcy.jl-have?" aria-label="Permalink to &quot;What output formats does JutulDarcy.jl have? {#What-output-formats-does-JutulDarcy.jl-have?}&quot;">​</a></h3><p>The simulator outputs results into standard Julia data structures (e.g. Vectors and Dicts) that can easily be written out using other Julia packages, for example in CSV format. We do not currently support binary formats output by commercial simulators.</p><p>Simulation results are written to disk using <a href="https://github.com/JuliaIO/JLD2.jl" target="_blank" rel="noreferrer">JLD2</a>, a subset of <a href="https://en.wikipedia.org/wiki/Hierarchical_Data_Format" target="_blank" rel="noreferrer">HDF5</a> commonly used in Julia for storing objects to disk.</p><h3 id="How-do-I-restart-an-interrupted-simulation?" tabindex="-1">How do I restart an interrupted simulation? <a class="header-anchor" href="#How-do-I-restart-an-interrupted-simulation?" aria-label="Permalink to &quot;How do I restart an interrupted simulation? {#How-do-I-restart-an-interrupted-simulation?}&quot;">​</a></h3><p>JutulDarcy keeps everything in memory by default. This is not practical for larger models. If the argument <code>output_path</code> is set to a directory, JutulDarcy writes to the <code>JLD2</code> format (variant of HDF5).</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Note: set ENV[&quot;JUTUL_OUTPUT_PATH&quot;] in your startup.jl first!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My_test_case&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth)</span></span></code></pre></div><p>If a output path is set, you can restart simulations:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart from the last succesfully solved step, or return output if everything is simulated</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ws, states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth, restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start from the beginning, overwriting files if already present</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ws, states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth, restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart from step 10 and throw error if step 9 is not already stored on disk.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ws, states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simulate_reservoir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(case, output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pth, restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>You can restart the simulation with different options for timestepping or tolerances.</p><h3 id="How-do-I-decide-where-output-is-stored?" tabindex="-1">How do I decide where output is stored? <a class="header-anchor" href="#How-do-I-decide-where-output-is-stored?" aria-label="Permalink to &quot;How do I decide where output is stored? {#How-do-I-decide-where-output-is-stored?}&quot;">​</a></h3><p><code>Jutul.jl</code> contains a system for managing output folders. It is highly recommended that you amend your <code>startup.jl</code> file to include <code>ENV[&quot;JUTUL_OUTPUT_PATH&quot;]</code> that points to where you want output to be stored. For example, on Windows usage of the output path mechanism may look something like this:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JUTUL_OUTPUT_PATH&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Randomly generated file name</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/jutul/jl_DwpAvQTiLo&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/jutul/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ensemble_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/ensemble_name/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:/jutul_output/mycase&quot;</span></span></code></pre></div><p>Or equivialent on a Linux system:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JUTUL_OUTPUT_PATH&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Randomly generated file name</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/jutul/jl_DwpAvQTiLo&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/jutul/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ensemble_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/ensemble_name/mycase&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jutul_output_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, subfolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/username/jutul_output/mycase&quot;</span></span></code></pre></div><p>You can also just specify a full path and keep track of output folders yourself, but using the <code>jutul_output_path</code> mechanism will make it easier to write a script that can be run on another computer with different folder structure.</p><h3 id="How-do-you-get-out-more-output-from-a-simulation?" tabindex="-1">How do you get out more output from a simulation? <a class="header-anchor" href="#How-do-you-get-out-more-output-from-a-simulation?" aria-label="Permalink to &quot;How do you get out more output from a simulation? {#How-do-you-get-out-more-output-from-a-simulation?}&quot;">​</a></h3><p>The default outputs per cell are primary variables and total masses:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reservoir_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_variables</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Symbol}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Pressure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Saturations</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :TotalMasses</span></span></code></pre></div><p>You can push variables to this list, or ask the code to output all variables:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model2, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> setup_reservoir_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domain, sys, extra_outputs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reservoir_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model2)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_variables</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Symbol}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Pressure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Saturations</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :TotalMasses</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :PhaseMassDensities</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :RelativePermeabilities</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :PhaseMobilities</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :PhaseMassMobilities</span></span></code></pre></div><p>Can also pass <code>extra_outputs = [:PhaseMobilities]</code> to output specific variables.</p><h2 id="plotting" tabindex="-1">Plotting <a class="header-anchor" href="#plotting" aria-label="Permalink to &quot;Plotting&quot;">​</a></h2><h3 id="What-is-required-for-visualization?" tabindex="-1">What is required for visualization? <a class="header-anchor" href="#What-is-required-for-visualization?" aria-label="Permalink to &quot;What is required for visualization? {#What-is-required-for-visualization?}&quot;">​</a></h3><p>We use the wonderful <a href="https://docs.makie.org/" target="_blank" rel="noreferrer"><code>Makie.jl</code></a> for both 2D and 3D plots. Generally <code>CairoMakie</code> is supported for non-interactive plotting and <code>GLMakie</code> is used for interactive plotting (especially 3D). The latter requires a working graphics context, which is not directly available when the code is run over for example SSH or on a server.</p><p>For more details on the backends, see the<a href="https://docs.makie.org/stable/explanations/backends/backends" target="_blank" rel="noreferrer"><code>Makie.jl</code> docs</a></p><h2 id="miscellaneous" tabindex="-1">Miscellaneous <a class="header-anchor" href="#miscellaneous" aria-label="Permalink to &quot;Miscellaneous&quot;">​</a></h2><h3 id="Can-you-add-feature-X-or-format-Y?" tabindex="-1">Can you add feature X or format Y? <a class="header-anchor" href="#Can-you-add-feature-X-or-format-Y?" aria-label="Permalink to &quot;Can you add feature X or format Y? {#Can-you-add-feature-X-or-format-Y?}&quot;">​</a></h3><p>If you have a feature you&#39;d like to have supported, please file an <a href="https://github.com/JuliaIO/JLD2.jl/issues" target="_blank" rel="noreferrer">issue</a> with details on the format. <code>JutulDarcy</code> is developed primarily through contract research, so features are added as needed for ongoing projects where the simulator is in use. Posting an issue, especially if you have a clear reference to how something should be implemented is still very useful. It is also possible to fund the development for a specific feature, or to implement the feature yourself by asking for pointers on how to get started.</p><h3 id="What-units-does-JutulDarcy.jl-use?" tabindex="-1">What units does JutulDarcy.jl use? <a class="header-anchor" href="#What-units-does-JutulDarcy.jl-use?" aria-label="Permalink to &quot;What units does JutulDarcy.jl use? {#What-units-does-JutulDarcy.jl-use?}&quot;">​</a></h3><p>JutulDarcy uses consistent units. This typically means that all your values must be input in strict SI. This means pressures in Pascal, temperatures in Kelvin and time in seconds. Note that this is very similar to the <code>METRIC</code> type of unit system seen in many commercial simulators, except that units of time is not given in days. This also impacts permeabilities, transmissibilities and viscosities, which will be much smaller than in metric where days are used.</p><p>Reading of input files will automatically convert data to the correct units for simulation, but care must be taken when you are writing your own code. <code>Jutul.jl</code> contains unit conversion factors to make it easier to write code:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jutul</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_to_si</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.2e7</span></span></code></pre></div><p>You can also extract individual units and to the setup yourself:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jutul</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day, stb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> si_units</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:day</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:stb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># convert to m^3/s:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>0.00018401307283333335</span></span></code></pre></div><p>JutulDarcy does currently not make use of conversion factors or explicit units can in principle use any consistent unit system. Some default scaling of variables assume that the magnitude pressures and velocities roughly match that of strict SI (e.g. Pascals and cubic meters per second). These scaling factors are primarily used when iterative linear solvers are used.</p><h3 id="Why-write-a-new-reservoir-simulation-code-in-Julia?" tabindex="-1">Why write a new reservoir simulation code in Julia? <a class="header-anchor" href="#Why-write-a-new-reservoir-simulation-code-in-Julia?" aria-label="Permalink to &quot;Why write a new reservoir simulation code in Julia? {#Why-write-a-new-reservoir-simulation-code-in-Julia?}&quot;">​</a></h3><p>We believe that reservoir simulation should be a <em>library</em> and not necessarily an application by itself. The future of porous media simulation is deeply integrated into other workflows, and not as an application that simply writes files to disk. As a part of experimentation in differentiable and flexible solvers using automatic differentiation that started with <a href="https://www.mrst.no" target="_blank" rel="noreferrer">MRST</a>, Julia was the natural next step.</p><h3 id="What-is-the-license-of-JutulDarcy.jl?" tabindex="-1">What is the license of JutulDarcy.jl? <a class="header-anchor" href="#What-is-the-license-of-JutulDarcy.jl?" aria-label="Permalink to &quot;What is the license of JutulDarcy.jl? {#What-is-the-license-of-JutulDarcy.jl?}&quot;">​</a></h3><p>The code uses the <a href="https://en.wikipedia.org/wiki/MIT_License" target="_blank" rel="noreferrer">MIT license</a>, a permissive license that requires attribution, but does not place limitations on commercial use or closed-source integration.</p><p>The code uses a number of dependencies that can have other licenses and we make no guarantees that the entirety of the code made available by adding <code>JutulDarcy.jl</code> to a given Julia environment is all MIT licensed.</p>`,47)]))}const c=i(n,[["render",l]]);export{d as __pageData,c as default};
